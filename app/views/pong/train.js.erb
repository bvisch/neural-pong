
window.Pong.network =  new Float64Array();
window.Pong.predict = function(inputs) {

  // ball.position.x, ball.position.y, ball.direction.x, ball.direction.y, paddle.position.y
  var n = window.Pong.network;
  for(var i = 0; i < neuron.length, ++i)
    n[i] = inputs[i];

  var neuron;
  var output = new Float64Array();
<% [:hidden, :output].each_with_index do |layer,layer_idx| %>
  <% @network["#{layer}_weights".to_sym].each_with_index do |weights,neuron_idx| %>
    neuron = n[<%= "#{layer_idx + 1}#{neuron_idx}" %>];
    <% weights.each_with_index do |weight,input_idx| %>
      neuron <%= input_idx == 0 ? '=' : '+=' %> n[<%= "#{layer_idx}#{input_idx}" %>] * <%= weight %>;
    <% end %>

    neuron += <%= @network["#{layer}_bias".to_sym][neuron_idx] %>;
    neuron = window.Pong.sigmoid(neuron);
    <% if layer == :output %>
      output[<%= neuron_idx %>] = neuron;
    <% end %>
  <% end %>
<% end %>

  output = window.Pong.softmax(output);
  return window.Pong.argmax(output);
}
